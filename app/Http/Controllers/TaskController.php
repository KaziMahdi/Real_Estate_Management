<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_TaskController.php" was generated by ProBot AI.
* Date: 4/3/2023 2:56:38 AM
* Contact: towhid1@outlook.com
*/
namespace App\Http\Controllers;
use App\Http\Controllers\Controller;
use App\Models\Customer;
use App\Models\Employee;
use App\Models\Task;


use App\Models\Project;
use App\Models\ProjectTask;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;
class TaskController extends Controller{
	public function index(){
		// $tasks = Task::paginate(10);

		$tasks=DB::table("tasks as t")

        ->join("project_tasks as k","t.project_task_id","=","k.id")
		->join("employees as e","t.employee_id","=","e.id")
		->join("projects as p","t.project_id","=","p.id")
        ->select("t.id","k.name as ptask","e.name as em","p.name as pro","t.start_time","t.end_time","t.location","t.status","t.created_at","t.updated_at")		
        
		->paginate(5);

		return view("pages.erp.task.index",["tasks"=>$tasks]);
	}
	public function create(){
		
		return view("pages.erp.task.create",["project_tasks"=>ProjectTask::all(),"employees"=>Employee::all(),"projects"=>Project::all()]);
	}
	public function store(Request $request){
		//Task::create($request->all());
		$task = new Task;
		$task->project_task_id=$request->project_task_id;
		$task->employee_id=$request->employee_id;
		$task->project_id=$request->project_id;
		$task->start_time=$request->start_time;
		$task->end_time=$request->end_time;
		$task->location=$request->location;
		$task->status=$request->status;

		$task->save();

		return back()->with('success', 'Created Successfully.');
	}
	public function show($id){
		
		$tasks=DB::table("tasks as t")

        ->join("project_tasks as k","t.project_task_id","=","k.id")
		->join("employees as e","t.employee_id","=","e.id")
		->join("projects as p","t.project_id","=","p.id")
		->where('t.id', $id)
        ->select("t.id","k.name as ptask","e.name as em","p.name as pro","t.start_time","t.end_time","t.location","t.status","t.created_at","t.updated_at")
		->first();
	
		return view("pages.erp.task.show",["task"=>$tasks]);
	}


	public function edit(Task $task){
		return view("pages.erp.task.edit",["task"=>$task,"project_tasks"=>ProjectTask::all(),"employees"=>Employee::all(),"projects"=>Project::all()]);
	}
	public function update(Request $request,Task $task){
		//Task::update($request->all());
		$task = Task::find($task->id);
		$task->project_task_id=$request->project_task_id;
		$task->employee_id=$request->employee_id;
		$task->project_id=$request->project_id;
		$task->start_time=$request->start_time;
		$task->end_time=$request->end_time;
		$task->location=$request->location;
		$task->status=$request->status;

		$task->save();

		return redirect()->route("tasks.index")->with('success','Updated Successfully.');
	}
	public function destroy(Task $task){
		$task->delete();
		return redirect()->route("tasks.index")->with('success', 'Deleted Successfully.');
	}
}
?>
