<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_RequisitionController.php" was generated by ProBot AI.
* Date: 4/8/2023 1:54:22 AM
* Contact: towhid1@outlook.com
*/
namespace App\Http\Controllers;
use App\Http\Controllers\Controller;
use App\Models\Requisition;
use App\Models\Employee;
use App\Models\Material;
use App\Models\Project;
use App\Models\ProjectTask;
use App\Models\RequisitionDetaile;
use App\Models\Uom;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;
class RequisitionController extends Controller{
	public function index(){
		$requisitions = DB::table("requisitions as r")
		->join("employees as e","r.employee_id","=","e.id")
		->select("r.id","e.name","r.requisition_date","r.status","r.remark","r.created_at","r.updated_at")
		->paginate(5);

		return view("pages.erp.requisition.index",["requisitions"=>$requisitions]);
	}
	public function create(){
		return view("pages.erp.requisition.create",["employees"=>Employee::all(),"projects"=>Project::all(),"projectTasks"=>ProjectTask::all(),"materials"=>Material::all(),"uoms"=>Uom::all()]);
	}
	public function store(Request $request){
		//Requisition::create($request->all());


		$requisition = new Requisition;
		$requisition->employee_id=$request->txtEmployee;
		$requisition->requisition_date=date("Y-m-d",strtotime($request->txtdate));
		$requisition->status=$request->txtstatus;
		$requisition->remark=$request->txtremark;

		$requisition->save();


		$detailrequisitions=$request->txtrequisitions;

		foreach($detailrequisitions as $detailrequisition){

			$detailrequ=new RequisitionDetaile;

			$detailrequ->requisition_id=$requisition->id;
			$detailrequ->project_id=$detailrequisition['item_id'];
			$detailrequ->project_task_id=$detailrequisition['pt_id'];
			$detailrequ->material_id=$detailrequisition['m_id'];
			$detailrequ->qty=$detailrequisition['qty'];
			$detailrequ->uom_id=$detailrequisition['u_id'];


			$detailrequ->save();



		}


		return back()->with('success', 'Created Successfully.');
	}

	public function show($id){
		$requisition = Requisition::find($id);
		$employee=Employee::find($requisition->employee_id);

		$detailrequ=DB::table("requisition_detailes as r")
		->join("projects as p","r.project_id","=","p.id")
		->join("project_tasks as t","r.project_task_id","=","t.id")
		->join("materials as m","r.material_id","=","m.id")
		->join("uoms as u","r.uom_id","=","u.id")
		->where("r.requisition_id",$id)
		->select("r.*","p.name as pname","t.name as tname","m.name as mname","u.name as uname",)
		->get();

		return view("pages.erp.requisition.show",["requisition"=>$requisition,"employee"=>$employee,"detailrequs"=>$detailrequ]);
	}


	public function edit(Requisition $requisition){
		return view("pages.erp.requisition.edit",["requisition"=>$requisition,"employees"=>Employee::all()]);
	}
	public function update(Request $request,Requisition $requisition){
		//Requisition::update($request->all());
		$requisition = Requisition::find($requisition->id);
		$requisition->employee_id=$request->employee_id;
		$requisition->requisition_date=$request->requisition_date;
		$requisition->status=$request->status;
		$requisition->remark=$request->remark;
date_default_timezone_set("Asia/Dhaka");
		$requisition->created_at=date('Y-m-d H:i:s');
date_default_timezone_set("Asia/Dhaka");
		$requisition->updated_at=date('Y-m-d H:i:s');

		$requisition->save();

		return redirect()->route("requisitions.index")->with('success','Updated Successfully.');
	}
	public function destroy(Requisition $requisition){
		$requisition->delete();
		return redirect()->route("requisitions.index")->with('success', 'Deleted Successfully.');
	}
}
?>
