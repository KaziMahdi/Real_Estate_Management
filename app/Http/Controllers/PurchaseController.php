<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_PurchaseController.php" was generated by ProBot AI.
* Date: 4/8/2023 4:25:59 AM
* Contact: towhid1@outlook.com
*/
namespace App\Http\Controllers;
use App\Http\Controllers\Controller;
use App\Models\Material;
use App\Models\Purchase;
use App\Models\PurchaseDetail;
use App\Models\Stock;
use App\Models\Supplier;
use App\Models\Uom;
use App\Models\Warehouse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;
class PurchaseController extends Controller{
	public function index(){
		$purchases = DB::table("purchases as p")
		->join("warehouses as w","p.warehouse_id","=","w.id")
		->join("suppliers as s","p.supplier_id","=","s.id")
		->select("p.id","w.name as warehouse","s.name as supplier","p.purchase_date","p.delivery_date","p.shipping_address","p.purchase_total","p.remark","p.paid_amount","p.created_at","p.updated_at")
		->paginate(5);
		return view("pages.erp.purchase.index",["purchases"=>$purchases]);
	}
	public function create(){
		return view("pages.erp.purchase.create",["suppliers"=>Supplier::all(),"warehouses"=>Warehouse::all(),"materials"=>Material::all(),"uoms"=>Uom::all()]);
	}
	public function store(Request $request){
		//Purchase::create($request->all());

		$purchase = new Purchase;
		$purchase->warehouse_id=$request->txtwarehouse;
		$purchase->supplier_id=$request->txtsupplier;
		$purchase->purchase_date=date("Y-m-d",strtotime($request->txtpurchasedate));
		$purchase->delivery_date=date("Y-m-d",strtotime($request->txtdeliverydate));
		$purchase->shipping_address=$request->txtshipping;
		$purchase->purchase_total=$request->txtpurchasetotal;
		$purchase->paid_amount=$request->txtpaidamount;		
		$purchase->remark=$request->txtremark;
		

		$purchase->save();

		$detailpurchase=$request->textpurchase;

		foreach($detailpurchase as $detailpurchas){

			$purchaseDetails=new PurchaseDetail;

			$purchaseDetails->purchase_id=$purchase->id;
			$purchaseDetails->material_id=$detailpurchas['item_id'];
			$purchaseDetails->qty=$detailpurchas['qty'];
			$purchaseDetails->price=$detailpurchas['price'];
			$purchaseDetails->uom_id=$detailpurchas['uom_id'];
			$purchaseDetails->vat=0;
			$purchaseDetails->discount=$detailpurchas['total_discount'];

			$purchaseDetails->save();

			$stock=new Stock;
			$stock->material_id=$detailpurchas['item_id'];
			$stock->qty=$detailpurchas['qty'];
			$stock->uom_id=$detailpurchas['uom_id'];

			$stock->save();


		}

		return back()->with('success', 'Created Successfully.');
	}
	public function show($id){
		$purchase = Purchase::find($id);
		$supplier=Supplier::find($purchase->supplier_id);
		$warehouse=Warehouse::find($purchase->warehouse_id);

		// $detailspurchases=DB::table("purchase_details")
		// ->where("purchase_id",$id)
		// ->get();

		$detailspurchases=DB::table("purchase_details as p")
		->join("materials as m","p.material_id","=","m.id")
		->join("uoms as u","p.uom_id","=","u.id")
		->where("p.purchase_id",$id)
		->select("p.*","m.name as mname","u.name as uname")
		->get();
		return view("pages.erp.purchase.show",["purchase"=>$purchase,"supplier"=>$supplier,"warehouse"=>$warehouse,"detailspurchases"=>$detailspurchases]);
	}
	public function edit(Purchase $purchase){
		return view("pages.erp.purchase.edit",["purchase"=>$purchase,"suppliers"=>Supplier::all()]);
	}
	public function update(Request $request,Purchase $purchase){
		//Purchase::update($request->all());
		$purchase = Purchase::find($purchase->id);
		$purchase->name=$request->name;
		$purchase->supplier_id=$request->supplier_id;
		$purchase->purchase_date=$request->purchase_date;
		$purchase->delivery_date=$request->delivery_date;
		$purchase->shipping_address=$request->shipping_address;
		$purchase->purchase_total=$request->purchase_total;
		$purchase->paid_amount=$request->paid_amount;
		$purchase->remark=$request->remark;
		$purchase->discount=$request->discount;

		$purchase->save();

		return redirect()->route("purchases.index")->with('success','Updated Successfully.');
	}
	public function destroy(Purchase $purchase){
		$purchase->delete();
		return redirect()->route("purchases.index")->with('success', 'Deleted Successfully.');
	}
}
?>
