<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_ProjectController.php" was generated by ProBot AI.
* Date: 4/2/2023 11:30:51 PM
* Contact: towhid1@outlook.com
*/
namespace App\Http\Controllers;
use App\Http\Controllers\Controller;
use App\Models\Department;
use App\Models\Owner;
use App\Models\Project;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;
class ProjectController extends Controller{
	public function index(){
		

		$projects=DB::table("projects as p")

        ->join("departments as d","p.department_id","=","d.id")
		->join("owners as o","p.owner_id","=","o.id")
		
        ->select("p.id","p.name","d.name as department","p.status","o.name as owner","p.layout","p.photo","p.location","p.created_at","p.updated_at")		
        
		->paginate(5);
		return view("pages.erp.project.index",["projects"=>$projects]);
	}
	public function create(){
		
		return view("pages.erp.project.create",["departments"=>Department::all(),"owners"=>Owner::all()]);
	}
	public function store(Request $request){

		
		//Project::create($request->all());
		$project = new Project;
		$project->name=$request->name;
		$project->department_id=$request->department_id;
		$project->status=$request->status;
		$project->owner_id=$request->owner_id;
		$project->layout=$request->layout;
		if(isset($request->photo)){
			$project->photo=$request->photo;
		}
		$project->location=$request->location;

		$project->save();
		if(isset($request->photo)){
			$imageName=$project->id.'.'.$request->photo->extension();
			$project->photo=$imageName;
			$project->update();
			$request->photo->move(public_path('img'),$imageName);
		}

		return back()->with('success', 'Created Successfully.');
	}
	public function show($id){
		
		$project=DB::table("projects as p")

        ->join("departments as d","p.department_id","=","d.id")
		->join("owners as o","p.owner_id","=","o.id")
		->where("p.id",$id)
        ->select("p.id","p.name","d.name as department","p.status","o.name as owner","p.layout","p.photo","p.location","p.created_at","p.updated_at")
		->first();
		return view("pages.erp.project.show",["project"=>$project]);
	}
	public function edit(Project $project){
		
		return view("pages.erp.project.edit",["project"=>$project,"departments"=>Department::all(),"owners"=>Owner::all()]);
	}
	public function update(Request $request,Project $project){
		
		//Project::update($request->all());
		$project = Project::find($project->id);
		$project->name=$request->name;
		$project->department_id=$request->department_id;
		$project->status=$request->status;
		$project->owner_id=$request->owner_id;
		$project->layout=$request->layout;
		if(isset($request->photo)){
			$project->photo=$request->photo;
		}
		$project->location=$request->location;

		$project->save();
		if(isset($request->photo)){
			$imageName=$project->id.'.'.$request->photo->extension();
			$project->photo=$imageName;
			$project->update();
			$request->photo->move(public_path('img'),$imageName);
		}

		return redirect()->route("projects.index")->with('success','Updated Successfully.');
	}
	public function destroy(Project $project){
		
		$project->delete();
		return redirect()->route("projects.index")->with('success', 'Deleted Successfully.');
	}

	public function get_project_json(){
		$id=$_GET['id'];
		$request=Project::find($id);
		return json_encode($request);


	}
}
?>
