<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_PayrolController.php" was generated by ProBot AI.
* Date: 5/20/2023 8:19:36 PM
* Contact: towhid1@outlook.com
*/
namespace App\Http\Controllers;
use App\Http\Controllers\Controller;
use App\Models\Payrol;
use App\Models\Employee;
use App\Models\Designation;
use App\Models\Department;
use App\Models\EmployeeDesignation;
use App\Models\Month;
use App\Models\PayrolDetail;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;
class PayrolController extends Controller{
	public function index(){
		$payrols = DB::table("payrols as p")
		->join("employees as e","p.employee_id","=","e.id")
		->join("employee_designations as d","p.designation_id","=","d.id")
		->join("departments as s","p.department_id","=","s.id")
		->select("p.*","e.name as ename","d.name as dname","s.name as sname")
		->paginate(5);

		return view("pages.erp.payrol.index",["payrols"=>$payrols]);
	}
	public function create(){
		return view("pages.erp.payrol.create",["employees"=>Employee::all(),"designations"=>EmployeeDesignation::all(),"departments"=>Department::all(),"months"=>Month::all()]);
	}
	public function store(Request $request){
		//Payrol::create($request->all());
		$payrol = new Payrol;
		$payrol->employee_id=$request->textemployee;
		$payrol->designation_id=$request->txtdesignation;
		$payrol->department_id=$request->txtDepartment;
		$payrol->pay_date=date("Y-m-d",strtotime($request->txtPaydate));
		$payrol->account_no=$request->txtaccount_no;
		$payrol->basic_salary=$request->txtsalary;
		$payrol->remark=$request->txtremark;
		$payrol->month_id=$request->txtmonth;
date_default_timezone_set("Asia/Dhaka");
		$payrol->created_at=date('Y-m-d H:i:s');
date_default_timezone_set("Asia/Dhaka");
		$payrol->updated_at=date('Y-m-d H:i:s');

		$payrol->save();

		$payrol_details=$request->txtpayrols;

		foreach($payrol_details as $payrol_detail){

			$detailpayrol=new PayrolDetail;

			$detailpayrol->payrol_id=$payrol->id;
			$detailpayrol->basic_salary=$payrol_detail["basic"];
			$detailpayrol->house_rent=$payrol_detail["item_id"];
			$detailpayrol->medical_allowance=$payrol_detail["medicale"];
			$detailpayrol->transport=$payrol_detail["transport"];
			$detailpayrol->provident_fund=$payrol_detail["provident"];
			$detailpayrol->income_tax=$payrol_detail["income"];
			$detailpayrol->insurance=$payrol_detail["insurance"];


			$detailpayrol->save();
			

		}

		return back()->with('success', 'Created Successfully.');
	}
	public function show($id){
		$payrol = Payrol::find($id);
		$employee=Employee::find($payrol->employee_id);
		$month=Month::find($payrol->month_id);
		$department=Department::find($payrol->department_id);
		$designation=EmployeeDesignation::find($payrol->designation_id);

		$payrol_details=DB::table("payrol_details as p")
						->where("p.payrol_id",$id)
						->select("p.*")
						->get();


		return view("pages.erp.payrol.show",["payrol"=>$payrol,"employee"=>$employee,"month"=>$month,"department"=>$department,"designation"=>$designation,"payrol_details"=>$payrol_details]);
	}
	public function edit(Payrol $payrol){
		return view("pages.erp.payrol.edit",["payrol"=>$payrol,"employees"=>Employee::all(),"designations"=>EmployeeDesignation::all(),"departments"=>Department::all()]);
	}
	public function update(Request $request,Payrol $payrol){
		//Payrol::update($request->all());
		$payrol = Payrol::find($payrol->id);
		$payrol->employee_id=$request->textemployee;
		$payrol->designation_id=$request->txtdesignation;
		$payrol->department_id=$request->txtDepartment;
		$payrol->pay_date=date("Y-m-d",strtotime($request->txtPaydate));
		$payrol->account_no=$request->txtaccount_no;
		$payrol->basic_salary=$request->txtsalary;
		$payrol->remark=$request->txtremark;
date_default_timezone_set("Asia/Dhaka");
		$payrol->created_at=date('Y-m-d H:i:s');
date_default_timezone_set("Asia/Dhaka");
		$payrol->updated_at=date('Y-m-d H:i:s');

		$payrol->save();

		return redirect()->route("payrols.index")->with('success','Updated Successfully.');
	}
	public function destroy(Payrol $payrol){
		$payrol->delete();
		return redirect()->route("payrols.index")->with('success', 'Deleted Successfully.');
	}
}
?>
