<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_ReportController.php" was generated by ProBot AI.
* Date: 4/5/2023 11:34:50 AM
* Contact: towhid1@outlook.com
*/

namespace App\Http\Controllers;

use App\Http\Controllers\Controller;
use App\Models\Report;
use App\Models\Employee;
use App\Models\Project;
use App\Models\ReportDetail;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;

class ReportController extends Controller
{
	public function index()
	{
		$reports = DB::table("reports as r")

			->join("employees as e", "r.employee_id", "=", "e.id")
			
			->select("r.id", "e.name", "r.report_date", "r.remark", "r.created_at", "r.updated_at")
			->paginate(5);
		return view("pages.erp.report.index", ["reports" => $reports]);
	}
	public function create()
	{
		$employees = DB::table("employees")->get();
		$projects = DB::table("projects")->get();

		return view("pages.erp.report.create", ["employees" => $employees, "projects" => $projects]);
	}

	public function store(Request $request)
	{
		//Report::create($request->all());

		$report = new Report;
		
		$report->employee_id = $request->cmbEmployee;
		$report->report_date =date("Y-m-d",strtotime($request->txtReoportDate));
		$report->remark = $request->txtRemark;

		

		$report->save();

		// return $request->txtReports;

		$reportDetailes = $request->txtReports;

		foreach ($reportDetailes as $reportDetaile) {

			$report_detail = new ReportDetail;
			$report_detail->report_id = $report->id;			
			$report_detail->project_id = $reportDetaile["item_id"];
			$report_detail->project_location = $reportDetaile["location"];
			$report_detail->completed_work = $reportDetaile["completed"];
			$report_detail->remaining_work = $reportDetaile["remaining"];

			
			

			 $report_detail->save();
		}
	}


	public function show($id)
	{
		$report = Report::find($id);
		
    
		$employee=Employee::find($report->employee_id);

		

		// $details=  DB::table('report_details')
		
		// ->where('report_id', $id)
		// ->get();

		$details=DB::table('report_details')
		->join('projects', 'projects.id', '=', 'report_details.project_id')
		->where('report_details.report_id', $id)
		->select('report_details.*', 'projects.name as project_name')
		->get();

		
		return view("pages.erp.report.show",["report"=>$report,"employee"=>$employee,"details"=>$details]);
	}
	public function edit(Report $report)
	{
		return view("pages.erp.report.edit", ["report" => $report, "employees" => Employee::all()]);
	}
	public function update(Request $request, Report $report)
	{
		//Report::update($request->all());
		$report = Report::find($report->id);
		$report->employee_id = $request->employee_id;
		$report->report_date = $request->report_date;

		$report->remark = $request->remark;

		date_default_timezone_set("Asia/Dhaka");
		$report->created_at = date('Y-m-d H:i:s');
		date_default_timezone_set("Asia/Dhaka");
		$report->updated_at = date('Y-m-d H:i:s');

		$report->save();

		return redirect()->route("reports.index")->with('success', 'Updated Successfully.');
	}
	public function destroy(Report $report)
	{
		$report->delete();
		return redirect()->route("reports.index")->with('success', 'Deleted Successfully.');
	}


	public function getLastId()
	{
		$lastOrder = Report::select('id')->orderByDesc('id')->first();
		if ($lastOrder) {
			return $lastOrder->id;
		} else {
			return 0;
		}
	}
}
